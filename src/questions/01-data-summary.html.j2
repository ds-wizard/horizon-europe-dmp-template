<div id="q-data-summary" class="question">
  <div class="answer">

  {# Measured datasets #}
  {%- set measuredPath = [uuids.creatingCUuid, uuids.measuredQUuid]|reply_path -%}
  {%- set measuredAUuid = repliesMap[measuredPath]|reply_str_value -%}
  {%- if measuredAUuid == uuids.measuredYesAUuid -%}
    {%- set measuredDataPath = [measuredPath, uuids.measuredYesAUuid, uuids.measuredDataQUuid]|reply_path -%}
    {%- set measuredDataItems = repliesMap[measuredDataPath]|reply_items -%}
    {# Measured datasets #}
    {%- if measuredDataItems|length > 0 -%}
      <div>
      <h4>Instrument datasets</h4>
      The following instrument datasets will be acquired in the {{globals.projects}}:
      <ul>
        {%- for datasetItem in measuredDataItems -%}
          {%- set pathPrefix = [measuredDataPath, datasetItem]|reply_path -%}
          <li>
            {%- set measuredDataNamePath = [pathPrefix, uuids.measuredDataNameQUuid]|reply_path -%}
            {%- set measuredDataName = repliesMap[measuredDataNamePath]|reply_str_value -%}
            {%- set measuredDataWhoPath = [pathPrefix, uuids.measuredDataWhoQUuid]|reply_path -%}
            {%- set measuredDataWhoAUuid = repliesMap[measuredDataWhoPath]|reply_str_value -%}
            {%- set measuredDataEquipPath = [pathPrefix, uuids.measuredDataEquipQUuid]|reply_path -%}
            {%- set measuredDataEquipAUuid = repliesMap[measuredDataEquipPath]|reply_str_value -%}
            {%- set mdDataUtilityPath = [pathPrefix, uuids.mdDataUtilityQUuid]|reply_path -%}
            {%- set mdDataUtilityAUuid = repliesMap[mdDataUtilityPath]|reply_str_value -%}
            <strong>{{ measuredDataName if measuredDataName else "(no name given)" }}</strong>
            {# Who will collect #}
            {%- if measuredDataWhoAUuid == uuids.measuredDataWhoExpertsOwnAUuid -%}
              <p>This dataset will be collected by experts in the {{globals.projects}}, with our own equipment.</p>
            {%- elif measuredDataWhoAUuid == uuids.measuredDataWhoExpertsOutAUuid -%}
              <p>This dataset will be collected by experts in the {{globals.projects}}, at a specialized infrastructure.</p>
            {%- elif measuredDataWhoAUuid == uuids.measuredDataWhoExternalAUuid -%}
              {%- set mdExternalOwnershipPath = [measuredDataWhoPath, uuids.measuredDataWhoExternalAUuid, uuids.mdExternalOwnershipQUuid]|reply_path -%}
              {%- set mdExternalOwnershipAUuid = repliesMap[mdExternalOwnershipPath]|reply_str_value -%}
              <p>
                This dataset will be collected by an external party.
                {% if mdExternalOwnershipAUuid == uuids.mdExternalOwnershipPartyAUuid -%}
                  The ownership of the resulting data will remain with the external party.
                {%- elif mdExternalOwnershipAUuid == uuids.mdExternalOwnershipPartnersAUuid -%}
                  The project partners acquire full ownership of the data.
                {%- elif mdExternalOwnershipAUuid == uuids.mdExternalOwnershipOtherAUuid -%}
                  {%- set mdExternalOwnershipOtherPath = [mdExternalOwnershipPath, uuids.mdExternalOwnershipOtherAUuid, uuids.mdExternalOwnershipOtherQUuid]|reply_path -%}
                  {%- set mdExternalOwnershipOther = repliesMap[mdExternalOwnershipOtherPath]|reply_str_value -%}
                  {%- if mdExternalOwnershipOther -%}
                    For the ownership of the data we have made the following arrangements: {{ mdExternalOwnershipOther|dot }}
                  {%- endif -%}
                {%- endif -%}
              </p>
            {%- endif -%}
            {# Equipment standard? #}
            {% if measuredDataEquipAUuid == uuids.measuredDataEquipDescribedAUuid -%}
              <p>The equipment is very well described and known.</p>
            {%- elif measuredDataEquipAUuid == uuids.measuredDataEquipCareAUuid -%}
              <p>The equipment is less well described or not completely standard, so we will need to take extra care documenting the process.</p>
            {%- endif -%}
            {# Data utility #}
            {% if mdDataUtilityAUuid == uuids.mdDataUtilityJustUsAUuid -%}
              <p>This data are expected to be used only by us.</p>
            {%- elif mdDataUtilityAUuid == uuids.mdDataUtilitySameFieldAUuid -%}
              <p>Other researchers working in the same field of research could be interested in using this data.</p>
            {%- elif mdDataUtilityAUuid == uuids.mdDataUtilityOtherFieldsAUuid -%}
              {%- set mdDataUtilityOtherFieldsHowPath = [mdDataUtilityPath, uuids.mdDataUtilityOtherFieldsAUuid, uuids.mdDataUtilityOtherFieldsHowQUuid]|reply_path -%}
              {%- set mdDataUtilityOtherFieldsHow = repliesMap[mdDataUtilityOtherFieldsHowPath]|reply_str_value -%}
              <p>Researchers working in other fields of research could be interested in using this data. {% if mdDataUtilityOtherFieldsHow -%}We think that other researchers can use this data as follows: {{ mdDataUtilityOtherFieldsHow|dot }}{%- endif -%}</p>
            {%- endif -%}
          </li>
        {%- endfor -%}
      </ul>
      </div>
    {%- endif -%}
  {%- endif -%}

  {# Non-equipment datasets #}
  {%- set neqDataPath = [uuids.creatingCUuid, uuids.neqDataQUuid]|reply_path -%}
  {%- set neqDataAUuid = repliesMap[neqDataPath]|reply_str_value -%}
  {%- if neqDataAUuid == uuids.neqDataYesAUuid -%}
    {%- set neqDataPrefix = [neqDataPath, uuids.neqDataYesAUuid]|reply_path -%}
    {%- set neqDataQuestPath = [neqDataPrefix, uuids.neqDataQuestQUuid]|reply_path -%}
    {%- set neqDataQuestAUuid = repliesMap[neqDataQuestPath]|reply_str_value -%}
    {%- set neqDataCaseReportPath = [neqDataPrefix, uuids.neqDataCaseReportQUuid]|reply_path -%}
    {%- set neqDataCaseReportAUuid = repliesMap[neqDataCaseReportPath]|reply_str_value -%}
    {%- set neqDataERecordsPath = [neqDataPrefix, uuids.neqDataERecordsQUuid]|reply_path -%}
    {%- set neqDataERecordsAUuid = repliesMap[neqDataERecordsPath]|reply_str_value -%}
    {%- set neqDataSetsPath = [neqDataPrefix, uuids.neqDataSetsQUuid]|reply_path -%}
    {%- set neqDataSetsItems = repliesMap[neqDataSetsPath]|reply_items -%}

    {%- set questionnaires = neqDataQuestAUuid == uuids.neqDataQuestYesAUuid -%}
    {%- set caseReport = neqDataCaseReportAUuid == uuids.neqDataCaseReportYesAUuid -%}
    {%- set eRecords = neqDataERecordsAUuid == uuids.neqDataERecordsYesAUuid -%}
    {%- if questionnaires or caseReport or eRecords or neqDataSetsItems|length > 0 -%}
      <div>
      <h4>Non-equipment datasets</h4>
      {# Types #}
      {%- set typesNames = [] -%}
      {%- if questionnaires -%}{%- do typesNames.append("questionnaires") -%}{%- endif -%}
      {%- if caseReport -%}{%- do typesNames.append("case report forms") -%}{%- endif -%}
      {%- if eRecords -%}{%- do typesNames.append("electronic patient records") -%}{%- endif -%}
      {%- set typesCount = typesNames|length -%}
      <p>
        {%- if typesCount > 0 -%}
          We also collect data from
          {% if typesCount == 1 -%}
              {{ typesNames[0] }}.
          {%- elif typesCount == 2 -%}
              {{ typesNames[0] }} and {{ typesNames[1] }}.
          {%- else -%}
              {{ typesNames[0] }}, {{ typesNames[1] }}, and {{ typesNames[2] }}.
          {%- endif -%}
        {% endif %}
        {# Datasets #}
        {%- if neqDataSetsItems|length > 0 -%}
          The non-equipment datasets are:
          <ul>
          {%- for neqDataSetItem in neqDataSetsItems -%}
            {%- set pathPrefix = [neqDataSetsPath, neqDataSetItem]|reply_path -%}
            {%- set neqDataSetsName = repliesMap[[pathPrefix, uuids.neqDataSetsNameQUuid]|reply_path]|reply_str_value -%}
            {%- set neqDataSetsDesc = repliesMap[[pathPrefix, uuids.neqDataSetsDescQUuid]|reply_path]|reply_str_value -%}
            {%- set neqDataUtilityPath = [pathPrefix, uuids.neqDataUtilityQUuid]|reply_path -%}
            {%- set neqDataUtilityAUuid = repliesMap[neqDataUtilityPath]|reply_items -%}
            <li>
              <strong>{{ neqDataSetsName if neqDataSetsName else "(no name given)" }}</strong>
              {% if neqDataSetsDesc -%}<span class="separator">&ndash;</span> {{ neqDataSetsDesc }}{%- endif -%}
              {# Data utility #}
              {% if neqDataUtilityAUuid == uuids.neqDataUtilityJustUsAUuid -%}
                <p>This data are expected to be used only by us.</p>
              {%- elif neqDataUtilityAUuid == uuids.neqDataUtilitySameFieldAUuid -%}
                <p>Other researchers working in the same field of research could be interested in using this data.</p>
              {%- elif neqDataUtilityAUuid == uuids.neqDataUtilityOtherFieldsAUuid -%}
                {%- set neqDataUtilityOtherFieldsHowPath = [neqDataUtilityPath, uuids.neqDataUtilityOtherFieldsAUuid, uuids.neqDataUtilityOtherFieldsHowQUuid]|reply_path -%}
                {%- set neqDataUtilityOtherFieldsHow = repliesMap[neqDataUtilityOtherFieldsHowPath]|reply_str_value -%}
                <p>Researchers working in other fields of research could be interested in using this data. {% if neqDataUtilityOtherFieldsHow -%}We think that other researchers can use this data as follows: {{ neqDataUtilityOtherFieldsHow|dot }}{%- endif -%}</p>
              {%- endif -%}
            </li>
          {%- endfor -%}
          </ul>
        {%- endif -%}
      </p>
      </div>
    {%- endif -%}
  {%- endif -%}

  {# Existing datasets (reference datasets) #}
  {%- set preexistingPath = [uuids.reusingCUuid, uuids.preexistingQUuid]|reply_path -%}
  {%- set preexistingAUuid = repliesMap[preexistingPath]|reply_str_value -%}
  {%- if preexistingAUuid == uuids.preexistingYesAUuid -%}
    {%- set refDataPath = [preexistingPath, uuids.preexistingYesAUuid, uuids.refDataQUuid]|reply_path -%}
    {%- set refDataItemsAll = repliesMap[refDataPath]|reply_items -%}
    {%- set refDataItems = [] -%}
    {%- for item in refDataItemsAll -%}
      {%- set nameReply = repliesMap[[refDataPath, item, uuids.refDataNameQUuid]|reply_path] -%}
      {%- if nameReply -%}
        {%- do refDataItems.append(item) -%}
      {%- endif -%}
    {%- endfor -%}
    {%- set nrefDataPath = [preexistingPath, uuids.preexistingYesAUuid, uuids.nrefDataQUuid]|reply_path -%}
    {%- set nrefDataItemsAll = repliesMap[nrefDataPath]|reply_items -%}
    {%- set nrefDataItems = [] -%}
    {%- for item in nrefDataItemsAll -%}
      {%- set nameReply = repliesMap[[nrefDataPath, item, uuids.nrefDataNameQUuid]|reply_path] -%}
      {%- if nameReply -%}
        {%- do nrefDataItems.append(item) -%}
      {%- endif -%}
    {%- endfor -%}
    {%- if (refDataItems|length + nrefDataItems|length) > 0 -%}
      <div>
        <h4>Re-used datasets</h4>
        {%- if refDataItems|length > 0 -%}
          <div>We have found the following reference datasets that we have considered for re-use:
          <ul>
            {%- for item in refDataItems -%}
              {%- set refDataPrefix = [refDataPath, item]|reply_path -%}
              {%- set refDataNameReply = repliesMap[[refDataPrefix, uuids.refDataNameQUuid]|reply_path] -%}
              {%- set refDataWhere = repliesMap[[refDataPrefix, uuids.refDataWhereQUuid]|reply_path]|reply_str_value -%}
              {%- set refDataUsedPath = [refDataPrefix, uuids.refDataUseQUuid]|reply_path -%}
              {%- set refDataUsedAUuid = repliesMap[refDataUsedPath]|reply_str_value -%}
              {%- set isNotUsed = refDataUsedAUuid == uuids.refDataUseNoAUuid -%}
              {%- set isUsed = refDataUsedAUuid == uuids.refDataUseYesAUuid -%}
              <li>
                {# identification #}
                <div>{{ macros.integrationValue(refDataNameReply) }}</div>
                {%- if refDataWhere -%}
                  <p>
                  {%- if refDataWhere.startswith("http://") or refDataWhere.startswith("https://") or refDataWhere.startswith("ftp://") %}
                    It is available via: <a href="{{ refDataWhere }}" target="_blank">{{ refDataWhere }}</a>.
                  {%- else %}
                    It is available via: {{ refDataWhere }}. 
                  {%- endif %}
                  {% if isUsed %}
                    It is used in the project.
                  {%- elif isNotUsed %}
                    It was considered but will not be used in the project.
                  {%- endif -%}
                  </p>
                {%- endif -%}
                {# ref data - not used #}
                {%- if isNotUsed -%}
                  {%- set refDataNotUsedPrefix = [refDataUsedPath, uuids.refDataUseNoAUuid]|reply_path -%}
                  {%- set refDataUseNoWhyPath = [refDataNotUsedPrefix, uuids.refDataUseNoWhyQUuid]|reply_path -%}
                  {%- set refDataUseNoWhyAUuid = repliesMap[refDataUseNoWhyPath]|reply_str_value -%}
                  {%- if refDataUseNoWhyAUuid == uuids.refDataUseNoDataAUuid -%}
                    <p>We decided not use this reference dataset because it misses the data we need.</p>
                  {%- elif refDataUseNoWhyAUuid == uuids.refDataUseNoAspectAUuid -%}
                    <p>We decided not use this reference dataset because it misses required aspects.</p>
                  {%- elif refDataUseNoWhyAUuid == uuids.refDataUseNoQualityAUuid -%}
                    <p>We decided not use this reference dataset because it is not of sufficient quality.</p>
                  {%- elif refDataUseNoWhyAUuid == uuids.refDataUseNoCondAUuid -%}
                    <p>We decided not use this reference dataset because its conditions of use do not allow us to use it.</p>
                  {%- elif refDataUseNoWhyAUuid == uuids.refDataUseNoReasonAUuid -%}
                    {%- set reason = repliesMap[[refDataUseNoWhyPath, refDataUseNoWhyAUuid, uuids.refDataUseNoReasonQUuid]|reply_path]|reply_str_value -%}
                    {%- if reason -%}
                      <p>We decided not use this reference dataset because of: {{ reason|dot }}</p>
                    {%- endif -%}
                  {%- endif -%}
                {%- endif -%}
                {# ref data - used #}
                {%- if isUsed -%}
                  {%- set refDataUsedPrefix = [refDataUsedPath, uuids.refDataUseYesAUuid]|reply_path -%}
                  {# owner #}
                  {%- set refDataOwnerPath = [refDataUsedPrefix, uuids.refDataOwnerQUuid]|reply_path -%}
                  {%- set refDataOwner = repliesMap[refDataOwnerPath]|reply_str_value -%}
                  {%- if refDataOwner -%}
                    <p>Owner of this dataset: {{ refDataOwner|dot }}</p>
                  {%- endif -%}
                  {# format #}
                  {%- set refDataFormatPath = [refDataUsedPrefix, uuids.refDataFormatQUuid]|reply_path -%}
                  {%- set refDataFormatAUuid = repliesMap[refDataFormatPath]|reply_str_value -%}
                  {%- if refDataFormatAUuid == uuids.refDataFormatUseAUuid -%}
                    <p>The dataset can be used in the provided format without any conversion needed.</p>
                  {%- elif refDataFormatAUuid == uuids.refDataFormatConvertAUuid -%}
                    <p>We will first need to convert the format before using it.</p>
                  {%- endif -%}
                  {# version #}
                  {%- set refDataVersionedPath = [refDataUsedPrefix, uuids.refDataVersionedQUuid]|reply_path -%}
                  {%- set refDataVersionedAUuid = repliesMap[refDataVersionedPath]|reply_str_value -%}
                  {%- if refDataVersionedAUuid == uuids.refDataVersionedYesAUuid -%}
                    {%- set refDataVersionedWhichPath = [refDataVersionedPath, uuids.refDataVersionedYesAUuid, uuids.refDataVersionedWhichQUuid]|reply_path -%}
                    {%- set refDataVersionedWhich = repliesMap[refDataVersionedWhichPath]|reply_str_value -%}
                    {%- set refDataVersionedChangePath = [refDataVersionedPath, uuids.refDataVersionedYesAUuid, uuids.refDataVersionedChangeQUuid]|reply_path -%}
                    {%- set refDataVersionedChangeAUuid = repliesMap[refDataVersionedChangePath]|reply_str_value -%}
                    {%- if refDataVersionedWhich or refDataVersionedChangeAUuid  %}
                      <p>
                      {% if refDataVersionedWhich -%}
                        We will use version "{{ refDataVersionedWhich }}" of this dataset.
                      {%- endif -%}
                      {%- if refDataVersionedChangeAUuid == uuids.refDataVersionedChangeStayAUuid %}
                        If a new version becomes available during the {{globals.projects}}, we will stay with the old version.
                      {%- elif refDataVersionedChangeAUuid == uuids.refDataVersionedChangeNewAUuid %}
                        If a new version becomes available during the {{globals.projects}}, new analyses will be done with the new version.
                      {%- elif refDataVersionedChangeAUuid == uuids.refDataVersionedChangeAllAUuid %}
                        If a new version becomes available during the {{globals.projects}}, all analyses will be redone with the new version.
                      {%- endif -%}
                      </p>
                    {%- endif -%}
                  {%- endif -%}
                  {# reproduce #}
                  {%- set refDataReproducePath = [refDataUsedPrefix, uuids.refDataReproduceQUuid]|reply_path -%}
                  {%- set refDataReproduceAUuid = repliesMap[refDataReproducePath]|reply_str_value -%}
                  {%- if refDataReproduceAUuid == uuids.refDataReproduceProviderAUuid -%}
                    <p>The provider keeps old versions around so the same reference data will be available to reproduce our results.</p>
                  {%- elif refDataReproduceAUuid == uuids.refDataReproduceCopyAUuid -%}
                    <p>We will keep a copy of the dataset and make it available with our results for the reproducibility.</p>
                  {%- elif refDataReproduceAUuid == uuids.refDataReproduceBothAUuid -%}
                    <p>The original dataset will be available both from the provider and from us together with our results for the reproducibility.</p>
                  {%- endif -%}
                  {# data use #}
                  {%- set dataUse = repliesMap[[refDataUsedPrefix, uuids.refDataUsageQUuid]|reply_path]|reply_str_value -%}
                  {%- if dataUse -%}
                  <p>We will use the dataset as follows: {{ dataUse|dot }}</p>
                  {%- endif -%}
                {%- endif -%}
              </li>
            {%- endfor -%}
          </ul>
          </div>
        {%- endif -%}
        {%- if nrefDataItems|length > 0 -%}
          <div>We have found the following non-reference datasets that we have considered for re-use:
          <ul>
            {%- for item in nrefDataItems -%}
              {%- set nrefDataPrefix = [nrefDataPath, item]|reply_path -%}
              {%- set nrefDataNamePath = [nrefDataPrefix, uuids.nrefDataNameQUuid]|reply_path -%}
              {%- set nrefDataNameReply = repliesMap[nrefDataNamePath] -%}
              {%- set nrefDataWhere = repliesMap[[nrefDataPrefix, uuids.nrefDataWhereQUuid]|reply_path]|reply_str_value -%}
              {%- set nrefDataUsedPath = [nrefDataPrefix, uuids.nrefDataUseQUuid]|reply_path -%}
              {%- set nrefDataUsedAUuid = repliesMap[nrefDataUsedPath]|reply_str_value -%}
              {%- set isNotUsed = nrefDataUsedAUuid == uuids.nrefDataUseNoAUuid -%}
              {%- set isUsed = nrefDataUsedAUuid == uuids.nrefDataUseYesAUuid -%}
              <li>
                {# identification #}
                <div>{{ macros.integrationValue(nrefDataNameReply) }}</div>
                {%- if nrefDataWhere -%}
                  <p>
                  {%- if nrefDataWhere.startswith("http://") or nrefDataWhere.startswith("https://") or nrefDataWhere.startswith("ftp://") %}
                    It is available via: <a href="{{ nrefDataWhere }}" target="_blank">{{ nrefDataWhere }}</a>.
                  {%- else %}
                    It is available via: {{ nrefDataWhere }}.
                  {%- endif %}
                  {% if isUsed %}
                    It is used in the project.
                  {%- elif isNotUsed %}
                    It was considered but will not be used in the project.
                  {%- endif -%}
                  </p>
                {%- endif -%}
                {# nref data - not used #}
                {%- if isNotUsed -%}
                  {%- set nrefDataNotUsedPrefix = [nrefDataUsedPath, uuids.nrefDataUseNoAUuid]|reply_path -%}
                  {%- set nrefDataUseNoWhyPath = [nrefDataNotUsedPrefix, uuids.nrefDataUseNoWhyQUuid]|reply_path -%}
                  {%- set nrefDataUseNoWhyAUuid = repliesMap[nrefDataUseNoWhyPath]|reply_str_value -%}
                  {%- if nrefDataUseNoWhyAUuid == uuids.nrefDataUseNoDataAUuid -%}
                    <p>We decided not use this non-reference dataset because it misses the data we need.</p>
                  {%- elif nrefDataUseNoWhyAUuid == uuids.nrefDataUseNoAspectAUuid -%}
                    <p>We decided not use this non-reference dataset because it misses required aspects.</p>
                  {%- elif nrefDataUseNoWhyAUuid == uuids.nrefDataUseNoQualityAUuid -%}
                    <p>We decided not use this non-reference dataset because it is not of sufficient quality.</p>
                  {%- elif nrefDataUseNoWhyAUuid == uuids.nrefDataUseNoCondAUuid -%}
                    <p>We decided not use this non-reference dataset because its conditions of use do not allow us to use it.</p>
                  {%- elif nrefDataUseNoWhyAUuid == uuids.nrefDataUseNoReasonAUuid -%}
                    {%- set reason = repliesMap[[nrefDataUseNoWhyPath, nrefDataUseNoWhyAUuid, uuids.nrefDataUseNoReasonQUuid]|reply_path]|reply_str_value -%}
                    {%- if reason -%}
                      <p>We decided not use this non-reference dataset because of: {{ reason|dot }}</p>
                    {%- endif -%}
                  {%- endif -%}
                {%- endif -%}
                {# nref data - used #}
                {%- if isUsed -%}
                  {%- set nrefDataUsedPrefix = [nrefDataUsedPath, uuids.nrefDataUseYesAUuid]|reply_path -%}
                  {%- set ownerSentences = [] -%}
                  {# owner #}
                  {%- set nrefDataOwnerPath = [nrefDataUsedPrefix, uuids.nrefDataOwnerQUuid]|reply_path -%}
                  {%- set nrefDataOwner = repliesMap[nrefDataOwnerPath]|reply_str_value -%}
                  {%- if nrefDataOwner -%}
                    {%- do ownerSentences.append("Owner of this dataset: " ~ nrefDataOwner|dot) -%}
                  {%- endif -%}
                  {# owners #}
                  {%- set nrefDataOwnersPath = [nrefDataUsedPrefix, uuids.nrefDataOwnersQUuid]|reply_path -%}
                  {%- set nrefDataOwnersAUuid = repliesMap[nrefDataOwnersPath]|reply_str_value -%}
                  {%- if nrefDataOwnersAUuid == uuids.nrefDataOwnersNoAUuid -%}
                    {%- set nrefDataOwnersNoReqPath = [nrefDataOwnersPath, nrefDataOwnersAUuid, uuids.nrefDataOwnersNoReqQUuid]|reply_path -%}
                    {%- set nrefDataOwnersNoReqAUuid = repliesMap[nrefDataOwnersNoReqPath]|reply_str_value -%}
                    {%- if nrefDataOwnersNoReqAUuid == uuids.nrefDataOwnersNoReqYesAUuid -%}
                      {%- do ownerSentences.append("We will need to request access to the dataset from its owners.") -%}
                    {%- endif -%}
                  {%- elif nrefDataOwnersAUuid == uuids.nrefDataOwnersYesAUuid -%}
                    {%- do ownerSentences.append("The owners of the dataset will collaborate on this " ~ globals.projects ~ ".") -%}
                  {%- elif nrefDataOwnersAUuid == uuids.nrefDataOwnersWeAUuid -%}
                    {%- do ownerSentences.append("We are owners of the dataset.") -%}
                  {%- endif -%}
                  {%- if ownerSentences|length > 0 -%}
                    <p>{{ ownerSentences|join(" ") }}</p>
                  {%- endif -%}
                  {# format #}
                  {%- set nrefDataFormatPath = [nrefDataUsedPrefix, uuids.nrefDataFormatQUuid]|reply_path -%}
                  {%- set nrefDataFormatAUuid = repliesMap[nrefDataFormatPath]|reply_str_value -%}
                  {%- if nrefDataFormatAUuid == uuids.nrefDataFormatUseAUuid -%}
                    <p>The dataset can be used in the provided format without any conversion needed.</p>
                  {%- elif nrefDataFormatAUuid == uuids.nrefDataFormatConvertAUuid -%}
                    <p>We will first need to convert the format before using it.</p>
                  {%- endif -%}
                  {# data access #}
                  {%- set nrefDataAccessPath = [nrefDataUsedPrefix, uuids.nrefDataAccessQUuid]|reply_path -%}
                  {%- set nrefDataAccessAUuid = repliesMap[nrefDataAccessPath]|reply_str_value -%}
                  {%- if nrefDataAccessAUuid %}
                    <p>
                    {% if nrefDataAccessAUuid == uuids.nrefDataAccessHaveCopyAUuid -%}
                      We already have a copy of this dataset.
                    {%- elif nrefDataAccessAUuid == uuids.nrefDataAccessWillDownloadAUuid -%}
                      We will download or get a copy.
                    {%- elif nrefDataAccessAUuid == uuids.nrefDataAccessWillOnlineAUuid -%}
                      We will use its online version without downloading it.
                    {%- endif -%}
                    </p>
                  {%- endif -%}
                  {# fixed #}
                  {%- set nrefDataFixedPath = [nrefDataUsedPrefix, uuids.nrefDataFixedQUuid]|reply_path -%}
                  {%- set nrefDataFixedAUuid = repliesMap[nrefDataFixedPath]|reply_str_value -%}
                  {%- if nrefDataFixedAUuid == uuids.nrefDataFixedFixedAUuid -%}
                    <p>It is a fixed dataset, changes will not influence reproducibility of our results.</p>
                  {%- elif nrefDataFixedAUuid == uuids.nrefDataFixedChangeAUuid -%}
                    <p>The dataset may get updated in the future; therefore, we need to make a snapshot.</p>
                  {%- endif -%}
                  {# complete #}
                  {%- set nrefDataCompletePath = [nrefDataUsedPrefix, uuids.nrefDataCompleteQUuid]|reply_path -%}
                  {%- set nrefDataCompleteAUuid = repliesMap[nrefDataCompletePath]|reply_str_value -%}
                  {%- if nrefDataCompleteAUuid == uuids.nrefDataCompleteUseAUuid -%}
                    <p>We will use the complete dataset.</p>
                  {%- elif nrefDataCompleteAUuid == uuids.nrefDataCompleteDocumentAUuid -%}
                    <p>Only part of the dataset will be used; any filtering or selection will be well documented.</p>
                  {%- elif nrefDataCompleteAUuid == uuids.nrefDataCompleteSubsetAUuid -%}
                    <p>We will make sure the selected subset will be available together with our results.</p>
                  {%- endif -%}
                  {# data use #}
                  {%- set dataUse = repliesMap[[nrefDataUsedPrefix, uuids.nrefDataUsageQUuid]|reply_path]|reply_str_value -%}
                  {%- if dataUse -%}
                  <p>We will use the dataset as follows: {{ dataUse|dot }}</p>
                  {%- endif -%}
                {%- endif -%}
              </li>
            {%- endfor -%}
          </ul>
          </div>
        {%- endif -%}
      </div>
    {%- endif -%}
    {# data harmonization #}
    {%- set dataHarmoPath = [preexistingPath, uuids.preexistingYesAUuid, uuids.dataHarmoQUuid]|reply_path -%}
    {%- set dataHarmoAUuid = repliesMap[dataHarmoPath]|reply_str_value -%}
    {%- if dataHarmoAUuid == uuids.dataHarmoNoAUuid -%}
      <p>There is no need to harmonize different sources of existing data in our case.</p>
    {%- elif dataHarmoAUuid == uuids.dataHarmoYesAUuid -%}
      {%- set dataHarmoOthersPath = [dataHarmoPath, dataHarmoAUuid, uuids.dataHarmoOthersQUuid]|reply_path %}
      {%- set dataHarmoOthersAUuid = repliesMap[dataHarmoOthersPath]|reply_str_value %}
      <p>We will need to harmonize different sources of existing data.
      {%- if dataHarmoAUuid == uuids.dataHarmoOthersYesAUuid %}
        Our harmonization results will be made available to others.
      {%- endif %}
      </p>
    {%- endif -%}
    {# data computer readable #}
    {%- set dataCompReadPath = [preexistingPath, uuids.preexistingYesAUuid, uuids.dataCompReadQUuid]|reply_path -%}
    {%- set dataCompReadAUuid = repliesMap[dataCompReadPath]|reply_str_value -%}
    {%- if dataCompReadAUuid == uuids.dataCompReadYesAUuid -%}
    {%- set dataCompReadSentences = [] -%}
      {%- do dataCompReadSentences.append("We will be using data that needs to be (re-)made computer readable first.") -%}
      {%- set dataCompReadOthersPath = [dataCompReadPath, dataCompReadAUuid, uuids.dataCompReadOthersQUuid]|reply_path -%}
      {%- set dataCompReadOthersAUuid = repliesMap[dataCompReadOthersPath]|reply_str_value -%}
      {%- if dataCompReadOthersAUuid == uuids.dataCompReadOthersYesAUuid -%}
        {%- do dataCompReadSentences.append("We will provide machine readable, standardised metadata to others.") -%}
        {%- set standards = [] -%}
        {%- set standardItemsPath = [dataCompReadOthersPath, dataCompReadOthersAUuid, uuids.dataCompReadOthersYesStandardsQUuid]|reply_path -%}
        {%- set standardItems = repliesMap[standardItemsPath]|reply_items -%}
        {%- for item in standardItems -%}
          {%- set reply = repliesMap[[standardItemsPath, item, uuids.dataCompReadOthersYesStandardQUuid]|reply_path] -%}
          {%- if reply and reply.value -%}
            {%- do standards.append(reply) -%}
          {%- endif -%}
        {%- endfor -%}
        {%- if standards|length == 1 -%}
        {%- elif standards|length > 1 %}
          {%- set standardLinks = [] -%}
          {%- for standardReply in standards %}
            {{ macros.integrationValue(standardReply) }}
          {% endfor %}
          {%- do dataCompReadSentences.append("For that, we will use the following formats: " ~ standardLinks|join(", ") ~ ".") -%}
        {%- endif -%}
      {%- endif -%}
      {%- set dataCompReadItselfPath = [dataCompReadPath, dataCompReadAUuid, uuids.dataCompReadItselfQUuid]|reply_path -%}
      {%- set dataCompReadItselfAUuid = repliesMap[dataCompReadItselfPath]|reply_str_value -%}
      {%- if dataCompReadItselfAUuid == uuids.dataCompReadItselfYesRepoAUuid %}
        {%- do dataCompReadSentences.append("The data itself will be made available in computer readable form to others through a standard repository.") -%}
      {%- elif dataCompReadItselfAUuid == uuids.dataCompReadItselfYesOtherAUuid %}
        {%- do dataCompReadSentences.append("The data itself will be made available in computer readable form to others.") -%}
      {%- endif -%}
      {%- if dataCompReadSentences|length > 0 -%}
        <p>{{ dataCompReadSentences|join(" ") }}</p>
      {%- endif -%}
    {%- endif -%}
  {%- endif -%}

  {# Format/Type with volume #}
  {%- set formatsPath = [uuids.creatingCUuid, uuids.formatsQUuid]|reply_path -%}
  {%- set formatsItems = repliesMap[formatsPath]|reply_items -%}
  {%- if formatsItems|length > 0 -%}
    <h4>Data formats and types</h4>
    <div>We will be using the following data formats and types:
    <ul>
      {%- for formatItem in formatsItems -%}
        {%- set formatPrefix = [formatsPath, formatItem]|reply_path -%}
        {%- set formatNameReply = repliesMap[[formatPrefix, uuids.formatsNameQUuid]|reply_path] -%}
        {%- set formatsIsStandardPath = [formatPrefix, uuids.formatsIsStandardQUuid]|reply_path -%}
        {%- set formatsIsStandardAUuid = repliesMap[formatsIsStandardPath]|reply_str_value -%}
        {%- set formatsIsLTSuitablePath = [formatPrefix, uuids.formatsIsLTSuitableQUuid]|reply_path -%}
        {%- set formatsIsLTSuitableAUuid = repliesMap[formatsIsLTSuitablePath]|reply_str_value -%}
        {%- set formatsVolumePath = [formatPrefix, uuids.formatsVolumeQUuid]|reply_path -%}
        {%- set formatsVolumeAUuid = repliesMap[formatsVolumePath]|reply_str_value -%}
        <li>
          {# identification #}
          <div>{{ macros.integrationValue(formatNameReply) }}</div>
          {%- if formatsIsStandardAUuid or formatsIsLTSuitableAUuid or formatsVolumeAUuid -%}
            <p>
            {# standard? #}
            {%- if formatsIsStandardAUuid == uuids.formatsIsStandardYesAUuid %}
              It is a standardized format.
            {%- elif formatsIsStandardAUuid == uuids.formatsIsStandardNoAUuid -%}
              {%- set formatsWhyNonStandardPath = [formatsIsStandardPath, uuids.formatsIsStandardNoAUuid, uuids.formatsWhyNonStandardQUuid]|reply_path -%}
              {%- set formatsWhyNonStandardAUuid = repliesMap[formatsWhyNonStandardPath]|reply_str_value -%}
              {%- if formatsWhyNonStandardAUuid == uuids.formatsWhyNSThereIsNoStandardAUuid %}
                It is not a standardized format because there is no standardized format for this data type.
              {%- elif formatsWhyNonStandardAUuid == uuids.formatsWhyNSItIsOptimizedAUuid %}
                It is not a standardized format but it is optimized for processing speed and/or volume.
              {%- elif formatsWhyNonStandardAUuid == uuids.formatsWhyNSAnotherReasonAUuid -%}
                {%- set formatsWhyNSAnotherReasonPath = [formatsWhyNonStandardPath, uuids.formatsWhyNSAnotherReasonAUuid, uuids.formatsWhyNSAnotherReasonQUuid]|reply_path -%}
                {%- set formatsWhyNSAnotherReason = repliesMap[formatsWhyNSAnotherReasonPath]|reply_str_value -%}
                It is not a standardized format.
                {%- if formatsWhyNSAnotherReason %}
                  {{ formatsWhyNSAnotherReason|capitalize|dot }}
                {%- endif -%}
              {%- endif -%}
            {%- endif -%}
            {# long-term suitable? #}
            {%- if formatsIsLTSuitableAUuid == uuids.formatsIsLTSuitableYesAUuid %}
              This is a suitable format for long-term archiving.
            {%- elif formatsIsLTSuitableAUuid == uuids.formatsIsLTSuitableNoAUuid -%}
              {%- set formatsConvertLTSuitablePath = [formatsIsLTSuitablePath, uuids.formatsIsLTSuitableNoAUuid, uuids.formatsConvertLTSuitableQUuid]|reply_path -%}
              {%- set formatsConvertLTSuitableAUuid = repliesMap[formatsConvertLTSuitablePath]|reply_str_value -%}
              {%- if formatsConvertLTSuitableAUuid == uuids.formatsConvertLTSuitableYesAUuid %}
                This is not a suitable format for long-term archiving; however, we plan to convert it to a suitable format before the end of the project.
              {%- elif formatsConvertLTSuitableAUuid == uuids.formatsConvertLTSuitableNoAUuid %}
                We are aware that this is not a suitable format for long-term archiving.
              {%- endif -%}
            {%- endif -%}
            {# volume #}
            {%- if formatsVolumeAUuid == uuids.formatsVolumeSmallAUuid %}
              We will have only a small amount of data stored in this format.
            {%- elif formatsVolumeAUuid == uuids.formatsVolumeTotalAUuid -%}
              {%- set formatsVolumeTotalGB = repliesMap[[formatsVolumePath, uuids.formatsVolumeTotalAUuid, uuids.formatsVolumeTotalGBQUuid]|reply_path]|reply_str_value -%}
              {%- if formatsVolumeTotalGB %}
                We expect to have {{ formatsVolumeTotalGB }} GB of data in this format.
              {%- endif -%}
            {%- elif formatsVolumeAUuid == uuids.formatsVolumeFileSizeAUuid -%}
              {%- set formatsVolumeFiles = repliesMap[[formatsVolumePath, uuids.formatsVolumeFileSizeAUuid, uuids.formatsVolumeFilesQUuid]|reply_path]|reply_str_value -%}
              {%- set formatsVolumeFileGB = repliesMap[[formatsVolumePath, uuids.formatsVolumeFileSizeAUuid, uuids.formatsVolumeFileGBQUuid]|reply_path]|reply_str_value -%}
              {%- if formatsVolumeFiles and formatsVolumeFileGB %}
                We expect to have {{ formatsVolumeFiles }} files of average size {{ formatsVolumeFileGB }} GB (i.e. approximately {{ (formatsVolumeFiles|int * formatsVolumeFileGB|float)|round(2) }} GB in total).
              {%- endif -%}
            {%- endif -%}
            </p>
          {%- endif -%}
        </li>
      {%- endfor -%}
    </ul>
    </div>
  {%- endif -%}

  {# Storage and file conventions #}
  {%- set storageConvPath = [uuids.processingCUuid, uuids.storageConvQUuid]|reply_path -%}
  {%- set storageConvAUuid = repliesMap[storageConvPath]|reply_str_value -%}
  {%- if storageConvAUuid == uuids.storageConvExploreAUuid -%}
    {%- set stConvPrefix = [storageConvPath, uuids.storageConvExploreAUuid]|reply_path -%}
    {%- set storageSpacePath = [stConvPrefix, uuids.storageSpaceQUuid]|reply_path -%}
    {%- set storageSpaceAUuid = repliesMap[storageSpacePath]|reply_str_value -%}
    {%- set storageConvFSysPath = [stConvPrefix, uuids.storageConvFSysQUuid]|reply_path -%}
    {%- set storageConvFSysAUuid = repliesMap[storageConvFSysPath]|reply_str_value -%}
    {%- set storageConvObjStorePath = [stConvPrefix, uuids.storageConvObjStoreQUuid]|reply_path -%}
    {%- set storageConvObjStoreAUuid = repliesMap[storageConvObjStorePath]|reply_str_value -%}
    {%- set storageConvRelDbPath = [stConvPrefix, uuids.storageConvRelDbQUuid]|reply_path -%}
    {%- set storageConvRelDbAUuid = repliesMap[storageConvRelDbPath]|reply_str_value -%}
    {%- set storageConvGraphDbPath = [stConvPrefix, uuids.storageConvGraphDbQUuid]|reply_path -%}
    {%- set storageConvGraphDbAUuid = repliesMap[storageConvGraphDbPath]|reply_str_value -%}
    {%- set storageConvTripleStorePath = [stConvPrefix, uuids.storageConvTripleStoreQUuid]|reply_path -%}
    {%- set storageConvTripleStoreAUuid = repliesMap[storageConvTripleStorePath]|reply_str_value -%}
    {%- if storageConvFSysAUuid or storageConvObjStoreAUuid or storageConvRelDbAUuid or storageConvGraphDbAUuid or storageConvTripleStoreAUuid -%}
      <h4>Data storage and file conventions</h4>
      {# Storage space #}
      {%- if storageSpaceAUuid == uuids.storageSpaceLittleAUuid -%}
        <p>The {{globals.projects}} will require so little storage space for all data and software (including temporary storage) that it is not a problem.</p>
      {%- elif storageSpaceAUuid == uuids.storageSpaceSpecifyAUuid -%}
        {%- set size = repliesMap[[storageSpacePath, storageSpaceAUuid, uuids.storageSpaceSpecifyQUuid]|reply_path]|reply_str_value -%}
        {%- if size -%}
        <p>We estimate the storage space that the {{globals.projects}} will require for all data and software (including temporary storage) to {{ size }} gigabytes.</p>
        {%- endif -%}
      {%- endif -%}
      {# File System #}
      <p>
      {%- if storageConvFSysAUuid == uuids.storageConvFSysNoAUuid -%}
        We will not use a filesystem with files and folders.
      {%- elif storageConvFSysAUuid == uuids.storageConvFSysYesAUuid -%}
        {%- set scFSysPrefix = [storageConvFSysPath, uuids.storageConvFSysYesAUuid]|reply_path -%}
        {# Folder types #}
        {%- set scFSysSubjFoldersPath = [scFSysPrefix, uuids.scFSysSubjFoldersQUuid]|reply_path -%}
        {%- set scFSysSubjFoldersAUuid = repliesMap[scFSysSubjFoldersPath]|reply_str_value -%}
        {%- set scFSysAnalysisFoldersPath = [scFSysPrefix, uuids.scFSysAnalysisFoldersQUuid]|reply_path -%}
        {%- set scFSysAnalysisFoldersAUuid = repliesMap[scFSysAnalysisFoldersPath]|reply_str_value -%}
        {%- set scFSysWorkflowStepFoldersPath = [scFSysPrefix, uuids.scFSysWorkflowStepFoldersQUuid]|reply_path -%}
        {%- set scFSysWorkflowStepFoldersAUuid = repliesMap[scFSysWorkflowStepFoldersPath]|reply_str_value -%}
        {%- set subjectFolders = scFSysSubjFoldersAUuid == uuids.scFSysSubjFoldersYesAUuid -%}
        {%- set analysisFolders = scFSysAnalysisFoldersAUuid == uuids.scFSysAnalysisFoldersYesAUuid -%}
        {%- set workflowStepFolders = scFSysWorkflowStepFoldersAUuid == uuids.scFSysWorkflowStepFoldersYesAUuid -%}
        {%- set folders = [subjectFolders, analysisFolders, workflowStepFolders] -%}
        {%- if folders|any -%}
          We will use a filesystem with files and folders with the following folder conventions:
          <ul>
            {%- if subjectFolders -%}
              {%- set scFSysSubjFoldersConvs = repliesMap[[scFSysSubjFoldersPath, uuids.scFSysSubjFoldersYesAUuid, uuids.scFSysSubjFoldersConvsQUuid]|reply_path]|reply_str_value -%}
              <li>
                There will be a <strong>folder for each sample/subject</strong>.
                {% if scFSysSubjFoldersConvs %}
                  Each of those will use the following conventions: {{ scFSysSubjFoldersConvs|dot }}
                {%- endif -%}
              </li>
            {%- endif -%}
            {%- if analysisFolders -%}
              {%- set scFSysAnalysisFoldersConvs = repliesMap[[scFSysAnalysisFoldersPath, uuids.scFSysAnalysisFoldersYesAUuid, uuids.scFSysAnalysisFoldersConvsQUuid]|reply_path]|reply_str_value -%}
              <li>
                There will be  a <strong>(sub)folder for each (repeated) analysis</strong>. 
                {% if scFSysAnalysisFoldersConvs %}
                  Each of those will use the following conventions: {{ scFSysAnalysisFoldersConvs|dot }}
                {%- endif -%}
              </li>
            {%- endif -%}
            {%- if workflowStepFolders -%}
              {%- set scFSysWorkflowStepFoldersConvs = repliesMap[[scFSysWorkflowStepFoldersPath, uuids.scFSysWorkflowStepFoldersYesAUuid, uuids.scFSysWorkflowStepFoldersConvsQUuid]|reply_path]|reply_str_value -%}
              <li>
                There will be a <strong>(sub)folder for each step in the analysis workflow</strong>.
                {% if scFSysWorkflowStepFoldersConvs %}
                  Each of those will use the following conventions: {{ scFSysWorkflowStepFoldersConvs|dot }}
                {%- endif -%}
              </li>
            {%- endif -%}
          </ul>
        {%- else -%}
          We will use a filesystem with files and folders.
        {%- endif -%}
        {# Versioning #}
        {%- set scDocumentVersioningPath = [scFSysPrefix, uuids.scDocumentVersioningQUuid]|reply_path -%}
        {%- set scDocumentVersioningAUuid = repliesMap[scDocumentVersioningPath]|reply_str_value -%}
        {%- if scDocumentVersioningAUuid == uuids.scDocumentVersioningYesAUuid %}
          We document how we manage file versioning for files and folders.
        {%- endif -%}
        {# Other appointments #}
        {%- set scFSysAppointmentsPath = [scFSysPrefix, uuids.scFSysAppointmentsQUuid]|reply_path -%}
        {%- set scFSysAppointments = repliesMap[scFSysAppointmentsPath]|reply_str_value -%}
        {%- if scFSysAppointments %}
          {{ "Moreover, we" if folders|any else "We" }} have made appointments about naming the files. {{ appointmentsText|capitalize|dot }}
        {%- endif -%}
      {%- endif -%}
      </p>
      {# Object Store #}
      <p>
      {%- if storageConvObjStoreAUuid == uuids.storageConvObjStoreNoAUuid -%}
        We will not be storing data in an "object store" system.
      {%- elif storageConvObjStoreAUuid == uuids.storageConvObjStoreYesAUuid -%}
        {%- set scObjStoreNamingQUuid = [storageConvObjStorePath, uuids.storageConvObjStoreYesAUuid, uuids.scObjStoreNamingQUuid]|reply_path -%}
        {%- set scObjStoreNaming = repliesMap[scObjStoreNamingQUuid]|reply_str_value -%}
        {%- if scObjStoreNaming -%} 
          We will be storing data in an "object store" system using following naming conventions for objects in the store: {{ scObjStoreNaming|dot }}
        {%- else -%}
          We will be storing data in an "object store" system.
        {%- endif -%}
      {%- endif -%}
      </p>
      {# Relational Database #}
      <p>
      {%- if storageConvRelDbAUuid == uuids.storageConvRelDbNoAUuid -%}
        We will not use a relational database system to store project data.
      {%- elif storageConvRelDbAUuid == uuids.storageConvRelDbYesAUuid -%}
        We will use a relational database system to store project data.
        {%- set scRelDbHandleChangesPath = [storageConvRelDbPath, uuids.storageConvRelDbYesAUuid, uuids.scRelDbHandleChangesQUuid]|reply_path -%}
        {%- set scRelDbHandleChangesAUuid = repliesMap[scRelDbHandleChangesPath]|reply_str_value -%}
        {%- if scRelDbHandleChangesAUuid == uuids.scRelDbReadOnlyAnswerUuid %}
          Data in the database will be read-only.
        {%- elif scRelDbHandleChangesAUuid == uuids.scRelDbCrudAnswerUuid %}
          We will be allowing Create, Update and Delete operations for data in the database.
        {%- elif scRelDbHandleChangesAUuid == uuids.scRelDbExpireAnswerUuid %}
          Modifications will be made by <em>Expiring</em> the existing data and <em>Adding</em> updated data.
        {%- endif -%}
      {%- endif -%}
      </p>
      {# Graph Database #}
      <p>
      {%- if storageConvGraphDbAUuid == uuids.storageConvGraphDbNoAUuid -%}
        We will not use a graph database for data in the {{globals.projects}}.
      {%- elif storageConvGraphDbAUuid == uuids.storageConvGraphDbYesAUuid -%}
        We will use a graph database for data in the {{globals.projects}}.
      {%- endif -%}
      </p>
      {# Triple Store #}
      <p>
      {%- if storageConvTripleStoreAUuid == uuids.storageConvTripleStoreNoAUuid -%}
        We will not be storing data in a triple store.
      {%- elif storageConvTripleStoreAUuid == uuids.storageConvTripleStoreYesAUuid -%}
        We will be storing data in a triple store.
      {%- endif -%}
      </p>
    {%- endif -%}
  {%- endif -%}
  </div>
</div>
